# External Secrets Operator Examples

# AWS Secrets Manager SecretStore
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: aws-secrets-manager
  namespace: production
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-west-2
      auth:
        jwt:
          serviceAccountRef:
            name: external-secrets-sa
---
# ExternalSecret to sync from AWS
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: webapp-external-secret
  namespace: production
spec:
  refreshInterval: 15m
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: webapp-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        # Template to combine multiple secrets
        DATABASE_URL: "postgres://{{ .username }}:{{ .password }}@{{ .host }}:5432/{{ .database }}"
        REDIS_URL: "redis://{{ .redis_host }}:6379"
        config.json: |
          {
            "database": {
              "host": "{{ .host }}",
              "username": "{{ .username }}",
              "password": "{{ .password }}",
              "database": "{{ .database }}"
            },
            "api_keys": {
              "stripe": "{{ .stripe_key }}",
              "sendgrid": "{{ .sendgrid_key }}"
            }
          }
  data:
  - secretKey: username
    remoteRef:
      key: prod/database
      property: username
  - secretKey: password
    remoteRef:
      key: prod/database
      property: password
  - secretKey: host
    remoteRef:
      key: prod/database
      property: host
  - secretKey: database
    remoteRef:
      key: prod/database
      property: database
  - secretKey: redis_host
    remoteRef:
      key: prod/redis
      property: host
  - secretKey: stripe_key
    remoteRef:
      key: prod/api-keys
      property: stripe
  - secretKey: sendgrid_key
    remoteRef:
      key: prod/api-keys
      property: sendgrid
---
# HashiCorp Vault SecretStore
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-store
  namespace: production
spec:
  provider:
    vault:
      server: "https://vault.example.com:8200"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "webapp-role"
          serviceAccountRef:
            name: external-secrets-sa
---
# ExternalSecret for Vault
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: vault-webapp-secret
  namespace: production
spec:
  refreshInterval: 10m
  secretStoreRef:
    name: vault-store
    kind: SecretStore
  target:
    name: vault-webapp-secrets
    creationPolicy: Owner
  data:
  - secretKey: api-key
    remoteRef:
      key: webapp/config
      property: api_key
  - secretKey: database-password
    remoteRef:
      key: webapp/database
      property: password
  - secretKey: jwt-secret
    remoteRef:
      key: webapp/auth
      property: jwt_secret
---
# Google Secret Manager SecretStore
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: google-secret-manager
  namespace: production
spec:
  provider:
    gcpsm:
      projectId: "my-gcp-project"
      auth:
        workloadIdentity:
          clusterLocation: us-central1
          clusterName: my-cluster
          serviceAccountRef:
            name: external-secrets-sa
---
# ExternalSecret for Google Secret Manager
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gcp-webapp-secret
  namespace: production
spec:
  refreshInterval: 20m
  secretStoreRef:
    name: google-secret-manager
    kind: SecretStore
  target:
    name: gcp-webapp-secrets
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        app-config.json: |
          {
            "database": {
              "url": "{{ .database_url }}"
            },
            "cache": {
              "redis_url": "{{ .redis_url }}"
            },
            "external_apis": {
              "payment_key": "{{ .payment_api_key }}",
              "email_key": "{{ .email_api_key }}"
            }
          }
  data:
  - secretKey: database_url
    remoteRef:
      key: webapp-database-url
  - secretKey: redis_url
    remoteRef:
      key: webapp-redis-url
  - secretKey: payment_api_key
    remoteRef:
      key: payment-service-key
  - secretKey: email_api_key
    remoteRef:
      key: email-service-key
