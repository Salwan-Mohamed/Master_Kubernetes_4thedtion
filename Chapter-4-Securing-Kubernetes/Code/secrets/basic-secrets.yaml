# Basic Kubernetes Secrets Examples

# Generic secret with sensitive data
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: production
  labels:
    app: webapp
    type: application
type: Opaque
stringData:
  # Database connection
  DATABASE_URL: "postgresql://user:password@db.example.com:5432/webapp"
  
  # API Keys
  STRIPE_API_KEY: "sk_live_abcdefghijklmnopqrstuvwxyz"
  SENDGRID_API_KEY: "SG.abcdefghijklmnopqrstuvwxyz"
  
  # JWT Secret
  JWT_SECRET: "very-secure-jwt-secret-key-32-chars"
  
  # Configuration file
  config.json: |
    {
      "database": {
        "host": "db.example.com",
        "port": 5432,
        "ssl": true
      },
      "redis": {
        "host": "redis.example.com",
        "port": 6379
      }
    }
---
# TLS Secret for HTTPS
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: production
type: kubernetes.io/tls
data:
  # Base64 encoded certificate and key
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t...  # Your certificate here
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t...   # Your private key here
---
# Docker registry secret
apiVersion: v1
kind: Secret
metadata:
  name: docker-registry-secret
  namespace: production
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5leGFtcGxlLmNvbSI6eyJ1c2VybmFtZSI6InVzZXIiLCJwYXNzd29yZCI6InBhc3N3b3JkIiwiYXV0aCI6ImRYTmxjanB3WVhOemQyOXlaQT09In19fQ==
---
# Pod using secrets
apiVersion: v1
kind: Pod
metadata:
  name: webapp-with-secrets
  namespace: production
spec:
  containers:
  - name: webapp
    image: webapp:latest
    
    # Environment variables from secrets
    env:
    - name: DATABASE_URL
      valueFrom:
        secretKeyRef:
          name: app-secrets
          key: DATABASE_URL
    - name: STRIPE_API_KEY
      valueFrom:
        secretKeyRef:
          name: app-secrets
          key: STRIPE_API_KEY
    
    # All secret keys as environment variables
    envFrom:
    - secretRef:
        name: app-secrets
    
    # Mount secrets as files
    volumeMounts:
    - name: config-volume
      mountPath: "/etc/config"
      readOnly: true
    - name: tls-volume
      mountPath: "/etc/ssl/certs"
      readOnly: true
    
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
        - ALL
  
  volumes:
  # Secret mounted as files
  - name: config-volume
    secret:
      secretName: app-secrets
      items:
      - key: config.json
        path: config.json
        mode: 0400
  
  # TLS certificates
  - name: tls-volume
    secret:
      secretName: tls-secret
      defaultMode: 0400
  
  # Image pull secret
  imagePullSecrets:
  - name: docker-registry-secret
